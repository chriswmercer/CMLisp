- Fix implicit casts
- Fix symbol operations to use those casts
(int is done, string is done)

- Add useful symbol operations e.g. + string = concat
string done for +
Special operators moved to be in the types class 


- Fix tokenising to correctly build fragments
- Add concept of local scope to functions
- Add into operator => for functions, objects, arrays and fragments
- Add keywords: for, concatenate, reverse, etc

- Add web server functionality
- Add open text file functionality
- Add guard to check identifiers exist in scope else exception
- Add test statements
- Add catch (1 catch per scope, registered as a special type of function)

CONSIDER
- Add "is" keyword required for variables, although it does nothing --? optional? for functions too?


DONE
- For keyword lookup add being able to find based on fewest letters e.g. con = concatenate

-----

TYPE 		+			-			*			/			==		=>
String 		concat  	x   		int 		x 			==		interpolate	destination, interpolate source
Integer																interpolate source												
Decimal																interpolate source
Array 		add el  	remove el 									interpolate source
Boolean		x			x			x			x	
Fragment    contact		x			int 		x					interpolate destination
KVP 		x			x			object 		x					interpolate source
Nil			x			x			x			x			nil only
Object      KVP 		KVP by key 	object 		x					interpolate destination, interpolate source
